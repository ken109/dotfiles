#!/usr/bin/env bash

set -eu

if [ "$(uname)" = "Darwin" ]; then
  e_newline && e_header "Homebrew installing..."
  {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  } 1> /dev/null
  e_newline && e_done "Homebrew install"

  test -e /opt/homebrew/bin/brew && eval "$(/opt/homebrew/bin/brew shellenv)"
fi

e_newline && e_header "asdf installing..."
{
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2
  source "$HOME/.asdf/asdf.sh"
} 1> /dev/null
e_newline && e_done "asdf install"

git config --global ghq.root ~/.ghq

if [ "$(uname)" = "Darwin" ]; then
  # nodejs
  brew install gpg gawk

  brew tap homebrew/cask-fonts
  brew install --cask font-hack-nerd-font font-cica

  # tools
  brew install trash git-flow-avh zsh tmux neovim git fzf bat ripgrep ghq fd translate-shell lazygit

  sudo bash -c "echo '$(brew --prefix)/bin/zsh' >> /etc/shells"
  sudo chsh -s "$(brew --prefix)/bin/zsh" "$USER"

  "$(brew --prefix)/opt/fzf/install"
elif [ "$(uname)" = "Linux" ]; then
  export DEBIAN_FRONTEND=noninteractive

  # apt
  e_newline && e_header "Apt package installing..."
  {
    sudo -E apt-get update

    # nodejs
    sudo -E apt-get install -y dirmngr gpg curl gawk

    # libs
    sudo -E apt-get install -y gettext

    # tools
    sudo -E apt-get install -y zsh tmux git fzf bat ripgrep fd-find unzip
  } 1> /dev/null
  e_newline && e_done "Apt package install"

  # golang
  e_newline && e_header "Golang installing..."
  {
    export GOPATH="$HOME/.go"
    export PATH="$GOPATH/bin:$PATH"

    asdf plugin add golang
    go_version=$(asdf list all golang | rg '^[0-9]+\.[0-9]+\.[0-9]+$' | tail -1)
    asdf install golang "$go_version"
    asdf global golang "$go_version"
  } 1> /dev/null
  e_newline && e_done "Golang install"

  # ghq
  e_newline && e_header "ghq installing..."
  {
    go install github.com/x-motemen/ghq@latest
    go install github.com/jesseduffield/lazygit@latest
  } 1> /dev/null
  e_newline && e_done "ghq install"

  # neovim
  e_newline && e_header "neovim installing..."
  {
    ghq get -b stable --depth=1 https://github.com/neovim/neovim.git
    (
      cd ~/.ghq/github.com/neovim/neovim || exit
      make CMAKE_BUILD_TYPE=RelWithDebInfo 1>/dev/null
      sudo make install 1>/dev/null
    )
  } 1> /dev/null
  e_newline && e_done "neovim install"

  sudo chsh -s "/usr/bin/zsh" "$USER"
fi

# oh my zsh
e_newline && e_header "oh-my-zsh installing..."
{
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --unattended"

  mkdir -p "$HOME/.zsh"
  git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure"

  git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
} 1> /dev/null
e_newline && e_done "oh-my-zsh install"

# rust
e_newline && e_header "Rust installing..."
{
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  source "$HOME/.cargo/env"
  cargo install eza git-delta
} 1> /dev/null
e_newline && e_done "Rust install"

make deploy
